/* ============================================================
    * JD Widths
============================================================ */
  
$jd-mq: null;

@if ($jd-mobile-first) {
    $jd-mq: 'min-width';
} @else {
    $jd-mq: 'max-width';
}

.o-layout {
    list-style:none;
    margin:0; 
    padding:0;     
    display: flex;
    flex-wrap: wrap;
    min-width: 100%;
}

    .o-layout__item {
        box-sizing: border-box;
        position: relative;
    }


@each $name, $gutter in $gutters {
    $sufix: '';

    @if ($name) {
        $sufix: unquote("--")+$name;
    }

    .o-layout#{$sufix} {
        margin-left: -$gutter;
        width: calc(100% + #{$gutter});

        .o-layout__item {
            margin-left: $gutter;
        }

        @for $i from 1 through $jd-colcount {
            .u-#{$i} { 
                flex-basis:	calc(#{(100% / $jd-colcount * $i)} - #{$gutter});
				max-width: calc(#{(100% / $jd-colcount * $i)} - #{$gutter});
            }

            .u-push-#{$i} {
                margin-left: calc(#{(100% / $jd-colcount * $i)} + #{$gutter});
            }

            .u-pull-#{$i} {
                margin-left: calc(#{(-100% / $jd-colcount * $i)} - #{$gutter});
            }
        }
        

        @each $device, $breakpoint in $jd-breakpoints {
            @media ($jd-mq: $breakpoint) {
                @for $i from 1 through $jd-colcount {
                    .u-#{$i}\@#{$device} {
                        flex-basis:	calc(#{(100% / $jd-colcount * $i)} - #{$gutter});
						max-width: calc(#{(100% / $jd-colcount * $i)} - #{$gutter});
                    }
                    
                    .u-push-#{$i}\@#{$device} {
                        margin-left: calc(#{(100% / $jd-colcount * $i)} + #{$gutter});
                    }

                    .u-pull-#{$i}\@#{$device} {
                        margin-left: calc(#{(-100% / $jd-colcount * $i)} - #{$gutter});
                    }
                }
                
                .u-push-0\@#{$device}, .u-pull-0\@#{$device} {
                    margin-left: $gutter;
                }
            }
        }
    }
}


@each $device, $breakpoint in $jd-breakpoints {
    @media ($jd-mq: $breakpoint) {
        @each $name, $gutter in $gutters {
            $sufix: '';

            @if ($name) {
                $sufix: unquote("--")+$name;
            }

            .o-layout#{$sufix}\@#{$device} {
                margin-left: -$gutter;
                width: calc(100% + #{$gutter});

                .o-layout__item {
                    margin-left: $gutter;
                }

                @for $i from 1 through $jd-colcount {
                    .u-#{$i} { 
                        flex-basis:	calc(#{(100% / $jd-colcount * $i)} - #{$gutter});
						max-width: calc(#{(100% / $jd-colcount * $i)} - #{$gutter});
                    }

                    .u-push-#{$i} {
                        margin-left: calc(#{(100% / $jd-colcount * $i)} + #{$gutter});
                    }

                    .u-pull-#{$i} {
                        margin-left: calc(#{(-100% / $jd-colcount * $i)} - #{$gutter});
                    }
                }
                

                @each $device, $breakpoint in $jd-breakpoints {
                    @media ($jd-mq: $breakpoint) {
                        @for $i from 1 through $jd-colcount {
                            .u-#{$i}\@#{$device} {
                                flex-basis:	calc(#{(100% / $jd-colcount * $i)} - #{$gutter});
								max-width: calc(#{(100% / $jd-colcount * $i)} - #{$gutter});
                            }
                            
                            .u-push-#{$i}\@#{$device} {
                                margin-left: calc(#{(100% / $jd-colcount * $i)} + #{$gutter});
                            }

                            .u-pull-#{$i}\@#{$device} {
                                margin-left: calc(#{(-100% / $jd-colcount * $i)} - #{$gutter});
                            }
                        }
                        
                        .u-push-0\@#{$device}, .u-pull-0\@#{$device} {
                            margin-left: $gutter;
                        }
                    }
                }
            }
        }
    }
}





/*--------------
 Modifiers
--------------*/

.o-layout--left {
  justify-content: flex-start;
}

.o-layout--center {
  justify-content: center;
}

.o-layout--right {
  justify-content: flex-end;
}

.o-layout--top {
    align-items: flex-start;
}

.o-layout--middle {
    align-items: center;
}

.o-layout--bottom {
    align-items: flex-end;
}

.o-layout--stretch {
    align-items: stretch;
}

.o-layout--flip {
    flex-direction: row-reverse;
}


@each $device, $breakpoint in $jd-breakpoints {
    @media ($jd-mq: $breakpoint) {
        .o-layout--left\@#{$device} {
        justify-content: flex-start;
        }

        .o-layout--center\@#{$device} {
        justify-content: center;
        }

        .o-layout--right\@#{$device} {
        justify-content: flex-end;
        }

        .o-layout--top\@#{$device} {
            align-items: flex-start;
        }

        .o-layout--middle\@#{$device} {
            align-items: center;
        }

        .o-layout--bottom\@#{$device} {
            align-items: flex-end;
        }

        .o-layout--stretch\@#{$device} {
            align-items: stretch
		}
		
		.o-layout--flip\@#{$device} {
			flex-direction: row-reverse;
		}
    }
}