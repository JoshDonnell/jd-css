/* ———————————————————————————————————————— */
/* JD - GRID
/* ———————————————————————————————————————— */
  
  //Overide Gutter
  // $gutter: 20px;
  // $gutter--large: 40px;


/*

  ------------
  Introduction
  ------------
  This is a simple grid using flex thats works great
  with the rest of the framework, it makes responsive
  simple again. 

  ------------
  Example
  ------------
  // HTMl
    <div class="g-init  g-init--wide">
      <div class="g__item g-large-4  g-laptop-2  g-mobile-1">
        <div class="post"></div>
      </div>

      <div class="g__item  g-6  g-large-4  g-laptop-2  g-mobile-1">
        <div class="post"></div>
      </div>
    </div>
  
  // Initialize the grid
    <div class="g-init  g-init--wide">
    This is the first step to using the grid, to open a new grid
    we us the g-init class this simply sets us up for a new 
    grid layout.

    There is then the g-init--wide on there this is one of a 
    few commands we can use to set up the grid.
  
    .g-init--wide - Uses a large gutter set in the site settings
    .g-init--no-gutter - No spacing between items
    .g-init--center - Centers items

  // Sizing
    <div class="g__item g-6  g-large-4  g-laptop-2  g-mobile-1">
    Inide of the g-init div we have each of our elements, each
    of these then have a class of g__item which means it is
    a grid item, this means you can have a element inside
    of the gird that is not a grid item which is useful.

    We assign our widths here using classes, simply the 
    class says the device size and the amount of columns.

    The example above will have 6 columns on all sizes above
    the container then on device between the container and
    the laptop size it will be 4 then laptop to mobile 2,
    finaly on mobile it goes down to 1. This example is
    an unlikly on however it shows what is possible.



*/

.g-init {
  list-style:none;
  margin:0; 
  padding:0;     
  margin-left: -$gutter;
  display: flex;
  flex-wrap: wrap;
}


.g-init--no-gutter {
  margin-left: 0;
  
  > .g__item {
    padding-left: 0;
  }

}


.g-init--wide {
  margin-left: -$gutter--large;

  > .g__item {
    padding-left: $gutter--large;
  }

}

.g-init--cneter {
  justify-content: center;
}  



  .g__item {
    padding-left: $gutter;
    box-sizing:border-box;
  }

.g-1 { flex-basis: 100%; }
.g-2 { flex-basis: 50%; }
.g-3 { flex-basis: 50%; }
.g-4 { flex-basis: 25%; }
.g-5 { flex-basis: 20%; }
.g-6 { flex-basis: 16.666%; }
.g-8 { flex-basis: 12.5%; }
.g-9 { flex-basis: 11.111%; }
.g-10 { flex-basis: 10%; }

@include responsive(large) {
  .g-large-1 { flex-basis: 100%; }
  .g-large-2 { flex-basis: 50%; }
  .g-large-3 { flex-basis: 50%; }
  .g-large-4 { flex-basis: 25%; }
  .g-large-5 { flex-basis: 20%; }
  .g-large-6 { flex-basis: 16.666%; }
  .g-large-8 { flex-basis: 12.5%; }
  .g-large-9 { flex-basis: 11.111%; }
  .g-large-10 { flex-basis: 10%; }
}

@include responsive(laptop) {
  .g-laptop-1 { flex-basis: 100%; }
  .g-laptop-2 { flex-basis: 50%; }
  .g-laptop-3 { flex-basis: 50%; }
  .g-laptop-4 { flex-basis: 25%; }
  .g-laptop-5 { flex-basis: 20%; }
  .g-laptop-6 { flex-basis: 16.666%; }
  .g-laptop-8 { flex-basis: 12.5%; }
  .g-laptop-9 { flex-basis: 11.111%; }
  .g-laptop-10 { flex-basis: 10%; }
}

@include responsive(tablet) {
  .g-tablet-1 { flex-basis: 100%; }
  .g-tablet-2 { flex-basis: 50%; }
  .g-tablet-3 { flex-basis: 50%; }
  .g-tablet-4 { flex-basis: 25%; }
  .g-tablet-5 { flex-basis: 20%; }
  .g-tablet-6 { flex-basis: 16.666%; }
  .g-tablet-8 { flex-basis: 12.5%; }
  .g-tablet-9 { flex-basis: 11.111%; }
  .g-tablet-10 { flex-basis: 10%; }
}

@include responsive(mobile) {
  .g-mobile-1 { flex-basis: 100%; }
  .g-mobile-2 { flex-basis: 50%; }
  .g-mobile-3 { flex-basis: 50%; }
  .g-mobile-4 { flex-basis: 25%; }
  .g-mobile-5 { flex-basis: 20%; }
  .g-mobile-6 { flex-basis: 16.666%; }
  .g-mobile-8 { flex-basis: 12.5%; }
  .g-mobile-9 { flex-basis: 11.111%; }
  .g-mobile-10 { flex-basis: 10%; }
}

.post {
  height: 50px;
  background-color: red;
  margin-top: 10px;
}
